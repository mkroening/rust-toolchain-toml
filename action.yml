name: 'rust-toolchain-toml'
author: 'Martin KrÃ¶ning'
description: 'Installs the Rust toolchain from a toolchain file (rust-toolchain.toml)'
branding:
  icon: activity
  color: red

inputs:
  toolchain-file:
    description: 'Path to the toolchain file'
    required: false
    default: 'rust-toolchain.toml'

outputs:
  cachekey:
    description: A short hash of the rustc version, appropriate for use as a cache key. "20220627a831"
    value: ${{ steps.rust-toolchain.outputs.cachekey }}
  name:
    description: Rustup's name for the selected version of the toolchain. "1.62.0"  # suitable for use with `cargo +${{steps.toolchain.outputs.name}}`
    value: ${{ steps.rust-toolchain.outputs.name }}

runs:
  using: 'composite'
  steps:
    - name: Download yq
      run: |
        : download yq
        case ${{runner.os}} in
          Linux)
            OS=linux
            EXE=
            ;;

          Windows)
            OS=windows
            EXE=.exe
            ;;

          macOS)
            OS=darwin
            ;;

          *)
            echo "Unknown OS ${{runner.os}}"
            exit 1
            ;;
        esac

        case ${{runner.arch}} in
          X86)
            ARCH=386
            ;;

          X64)
            ARCH=amd64
            ;;

          ARM)
            ARCH=arm
            ;;

          ARM64)
            ARCH=arm64
            ;;

          *)
            echo "Unknown architecture ${{runner.arch}}"
            exit 1
            ;;
        esac

        YQ_BINARY="yq_${OS}_${ARCH}${EXE}"

        curl --proto '=https' --tlsv1.2 -fsSL --retry 10 "https://github.com/mikefarah/yq/releases/latest/download/$YQ_BINARY" --create-dirs --output '${{ runner.temp }}/yq'
        chmod +x '${{ runner.temp }}/yq'
      shell: bash
    - name: Get channel from ${{ inputs.toolchain-file }}
      id: parse_toml
      run: |
        : parse toml
        echo "channel=$('${{ runner.temp }}/yq' '.toolchain.channel' ${{ inputs.toolchain-file }})" >> $GITHUB_OUTPUT
        echo "components=$('${{ runner.temp }}/yq' '.toolchain.components[]' ${{ inputs.toolchain-file }} | tr '\n' ',')" >> $GITHUB_OUTPUT
        echo "targets=$('${{ runner.temp }}/yq' '.toolchain.targets[]' ${{ inputs.toolchain-file }} | tr '\n' ',')" >> $GITHUB_OUTPUT
      shell: bash
    - name: Install Rust Toolchain
      id: rust-toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.parse_toml.outputs.channel != 'null' && steps.parse_toml.outputs.channel || 'stable' }}
        components: ${{ steps.parse_toml.outputs.components }}
        targets: ${{ steps.parse_toml.outputs.targets }}
