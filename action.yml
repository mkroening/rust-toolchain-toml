name: 'rust-toolchain-toml'
author: 'Martin KrÃ¶ning'
description: 'Installs the Rust toolchain from a toolchain file (rust-toolchain.toml)'
branding:
  icon: activity
  color: red

inputs:
  toolchain-file:
    description: 'Path to the toolchain file'
    required: false
    default: 'rust-toolchain.toml'

runs:
  using: 'composite'
  steps:
    - name: Download yq
      run: |
        : download yq
        case ${{runner.os}} in
          Linux)
            YQ_BINARY=yq_linux_amd64
            ;;

          Windows)
            YQ_BINARY=yq_windows_amd64.exe
            ;;

          macOS)
            YQ_BINARY=yq_darwin_amd64
            ;;

          *)
            echo "Unknown OS ${{runner.os}}"
            exit 1
            ;;
        esac

        curl --proto '=https' --tlsv1.2 -fsSL --retry 10 "https://github.com/mikefarah/yq/releases/latest/download/$YQ_BINARY" -o '${{ runner.temp }}/yq'
        chmod +x '${{ runner.temp }}/yq'
      shell: bash
    - name: Get channel from ${{ inputs.toolchain-file }}
      id: parse_toml
      run: |
        : parse toml
        echo "channel=$('${{ runner.temp }}/yq' '.toolchain.channel' ${{ inputs.toolchain-file }})" >> $GITHUB_OUTPUT
        echo "components=$('${{ runner.temp }}/yq' '.toolchain.components[]' ${{ inputs.toolchain-file }} | tr '\n' ',')" >> $GITHUB_OUTPUT
        echo "targets=$('${{ runner.temp }}/yq' '.toolchain.targets[]' ${{ inputs.toolchain-file }} | tr '\n' ',')" >> $GITHUB_OUTPUT
      shell: bash
    - name: Install Rust Toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ steps.parse_toml.outputs.channel }}
        components: ${{ steps.parse_toml.outputs.components }}
        targets: ${{ steps.parse_toml.outputs.targets }}
